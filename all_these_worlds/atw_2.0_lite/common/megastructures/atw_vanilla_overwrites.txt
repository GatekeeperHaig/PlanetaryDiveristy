mega_shipyard_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -27 y = -27 }
	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 3000
			unity = 2500
		}

		upkeep = {
			energy = 5
		}
	}

	custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_ONE_PER_COUNTRY"

	prerequisites = { "tech_mega_shipyard" }

	possible = {
		hidden_trigger = {
			exists = starbase
		}
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_megastructure"
			from = {
				OR = {
					has_relic = r_contingency_core
					NOT = { has_country_flag = built_mega_shipyard_site }
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_megastructure"
			from = { NOT = { has_country_flag = built_mega_shipyard_site_contingency } }
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_black_hole_neutron_star_pulsar"
			NOT = {
				is_star_class = sc_black_hole
				is_star_class = sc_neutron_star
				is_star_class = sc_pulsar
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_binary_trinary"
			NOR = {
				is_binary_star = yes
				is_trinary_star = yes
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_megastructure"
			has_no_non_gate_megastructure = yes
			NOT = {
				any_system_planet = {
					is_planet_class = pc_cosmogenesis_world
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "must_build_around_star"
				is_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
		}
	}

	# root = system
	# from = country
	ai_weight = {
		factor = 15

		modifier = {
			factor = 0.1
			starbase = { NOT = { has_starbase_size >= starbase_starfortress } }
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				NOT = {
					owner = { is_same_value = from }
				}
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}
	on_build_complete = {
		from = {
			if = {
				limit = {
					has_relic = r_contingency_core
					has_country_flag = built_mega_shipyard_site
				}
				set_country_flag = built_mega_shipyard_site_contingency
			}
			set_country_flag = built_mega_shipyard_site
		}
		fromfrom.planet = {
			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
		}
	}
}

ring_world_1 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -7 y = -7 }
	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
			influence = 300
		}

		upkeep = {
			energy = 5
		}
	}

	custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_RING_WORLD"

	prerequisites = { "tech_ring_world" }

	possible = {
		hidden_trigger = {
			exists = starbase
		}
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_habitable_planets"
			NOT = {
				any_system_planet = {
					colonizable_planet = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_black_hole"
			NOT = { is_star_class = sc_black_hole }
		}
		custom_tooltip = {
			fail_text = "requires_no_binary_trinary"
			NOR = {
				is_binary_star = yes
				is_trinary_star = yes
			}
		}

		custom_tooltip = {
			fail_text = "requires_no_existing_megastructure"
			has_no_non_gate_megastructure = yes
			NOT = {
				any_system_planet = {
					is_planet_class = pc_cosmogenesis_world
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "must_build_around_star"
				is_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_planets_for_material"
				hidden:solar_system = { any_system_planet = { NOT = { is_star = yes } } }
			}
		}
	}

	ai_weight = {
		factor = 10

		modifier = {
			factor = 0.1
			starbase = { NOT = { has_starbase_size >= starbase_starfortress } }
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				NOT = {
					owner = { is_same_value = from }
				}
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}
	on_build_complete = {
		set_star_flag = ring_world_built
	}
}

dyson_sphere_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -7 y = -7 }
	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
			unity = 1000
		}

		upkeep = {
			energy = 5
		}
	}

	custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_DYSON_SPHERE"

	prerequisites = { "tech_dyson_sphere" }

	potential = {
		has_machine_age_dlc = no
	}

	possible = {
		hidden_trigger = {
			exists = starbase
		}
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_dyson_sphere"
			from = {
				OR = {
					has_relic = r_contingency_core
					NOT = { has_country_flag = built_dyson_sphere }
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_machine_age"
			from = { has_machine_age_dlc = no }
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_dyson_sphere_two"
			from = {
				NOR = {
					has_country_flag = built_dyson_sphere_contingency
					has_country_flag = built_dyson_sphere_contingency_swarm
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_arc_furnace"
			system_has_arc_furnace = no
		}
		custom_tooltip = {
			fail_text = "requires_no_arc_furnace_construction"
			if = {
				limit = {
					system_has_arc_furnace = no
				}
				NOT = {
					solar_system = {
						has_star_flag = arc_furnace_construction
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_colonies"
			NOT = {
				any_system_planet = {
					is_colony = yes
					is_artificial = no
					exists = owner
					owner = {
						is_primitive = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "blocked_by_pre_ftl_policy"
			if = {
				limit = {
					any_system_planet = {
						exists = owner
						owner = {
							is_primitive = yes
						}
					}
				}
				from = {
					has_policy_flag = interference_aggressive
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_black_hole_neutron_star_pulsar"
			NOT = {
				is_star_class = sc_black_hole
				is_star_class = sc_neutron_star
				is_star_class = sc_pulsar
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_binary_trinary"
			NOR = {
				is_binary_star = yes
				is_trinary_star = yes
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_megastructure"
			has_no_non_gate_megastructure = yes
			NOT = {
				any_system_planet = {
					is_planet_class = pc_cosmogenesis_world
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "must_build_around_star"
				is_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
		}
	}

	# root = system
	# from = country
	ai_weight = {
		factor = 15

		modifier = {
			factor = 0.1
			starbase = { NOT = { has_starbase_size >= starbase_starfortress } }
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				NOT = {
					owner = { is_same_value = from }
				}
			}
		}
	}

	on_build_start = {
		set_star_flag = dyson_sphere_construction
	}
	on_build_cancel = {
		remove_star_flag = dyson_sphere_construction
	}
	on_build_complete = {
		remove_star_flag = dyson_sphere_construction
		set_star_flag = dyson_sphere_built
		remove_system_terraforming_candidates = yes
		from = {
			if = {
				limit = {
					has_relic = r_contingency_core
					has_country_flag = built_dyson_sphere
				}
				set_country_flag = built_dyson_sphere_contingency
			}
			set_country_flag = built_dyson_sphere
		}
		fromfrom.planet = {
			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
		}
	}
}

orbital_arc_furnace_1 = {
	entity = "arc_crucible_stage_1_entity"
	construction_entity = "arc_crucible_stage_1_entity"
	construction_scale = 1.02 #to avoid z-fighting of consrucion entity with the base entity
	portrait = "GFX_megastructure_arc_furnace_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	rotate_to_center = no
	scale_offset = yes
	#show_in_outliner = no
	use_planet_resource = yes
	scales_with_planet = yes
	build_time = 360 # 1 year
	resources = {
		category = megastructures
		cost = {
			alloys = 500
			unity = 500
		}

		upkeep = {
			energy = 20
		}
	}

	construction_blocks_and_blocked_by = self_type
	build_system_tooltip = arc_furnace_tooltip

	dismantle_cost = {
		category = megastructures
		cost = {
			energy = 500
		}
	}

	dismantle_time = 360

	dismantle_potential = {
		always = yes
	}

	dismantle_possible = {
		can_dismantle_megastructure = {
			TECH = tech_orbital_arc_furnace
		}
	}

	on_dismantle_complete = {
		every_system_planet = {
			limit = {
				has_modifier = orbital_arc_furnace_1_mod
			}
			dismantle_arc_furnace_effect = yes
		}
		random_system_planet = {
			limit = {
				has_planet_flag = has_arc_furnace
			}
			set_planet_entity = { entity = pc_molten }
			remove_planet_flag = has_megastructure
			remove_planet_flag = has_arc_furnace
		}
		from = {
			add_resource = {
				alloys = 500
				mult = modifier:megastructure_dismantle_refund_mult
			}
			if = {
				limit = {
					check_variable = {
						which = arc_furnace_counter
						value >= 1
					}
				}
				change_variable = {
					which = arc_furnace_counter
					value = -1
				}
			}
		}
	}

	prerequisites = { "tech_orbital_arc_furnace" }

	potential = {
		always = yes
	}

	possible = {
		hidden_trigger = {
			exists = starbase
		}
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_dyson_sphere"
			system_has_dyson_sphere = no
		}
		custom_tooltip = {
			fail_text = "requires_no_dyson_sphere_construction"
			if = {
				limit = {
					system_has_dyson_sphere = no
				}
				NOT = {
					solar_system = {
						has_star_flag = dyson_sphere_construction
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_arc_furnace"
			system_has_arc_furnace = no
		}
		custom_tooltip = {
			fail_text = "requires_less_than_x_arc_furnaces"
			from = {
				check_variable = {
					which = arc_furnace_counter
					value <= value:arc_furnace_limit
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			has_modifier = "class_molten"
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				NOR = {
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
				}
			}
			if = {
				limit = {
					from = { is_ai = yes }
				}
				solar_system = {
					count_system_planet = {
						count >= 8
						limit = {
							NOT = { has_deposit_for = shipclass_research_station }
							is_star = no
							is_astral_scar = no
							colonizable_planet = no
						}
					}
				}
			}
		}
	}

	country_modifier = {
		custom_tooltip = orbital_arc_furnace_1_mod_tooltip
	}

	# root = system
	# from = country
	ai_weight = {
		factor = 5

		modifier = {
			factor = 0.1
			starbase = { NOT = { has_starbase_size >= starbase_starfortress } }
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				NOT = {
					owner = { is_same_value = from }
				}
			}
		}
	}

	on_build_start = {
		set_star_flag = arc_furnace_construction
		if = {
			limit = {
				exists = from
			}
			from = {
				change_variable = {
					which = arc_furnace_counter
					value = 1
				}
			}
		}
	}
	on_build_cancel = {
		remove_star_flag = arc_furnace_construction
		if = {
			limit = {
				exists = from
			}
			from = {
				if = {
					limit = {
						check_variable = {
							which = arc_furnace_counter
							value >= 1
						}
					}
					change_variable = {
						which = arc_furnace_counter
						value = -1
					}
				}
			}
		}
	}
	on_build_complete = {
		remove_star_flag = arc_furnace_construction
		fromfrom.planet = {
			set_planet_flag = has_megastructure
			set_planet_flag = has_arc_furnace
			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
			set_planet_entity = { entity = invisible_turret_entity }
		}
		from = {
			country_event = {
				id = cybernetics.1000
			}
			country_event = {
				id = machine_age.3405 #2nd Arc Furnace built
			}
		}
	}
}

dyson_swarm_1 = {
	entity = "dyson_swarm_phase_1_entity"
	construction_entity = "dyson_swarm_phase_1_entity"
	portrait = "GFX_megastructure_dyson_swarm_background"
	entity_offset = { x = 0.1 y = 0.1 }
	rotate_to_center = no
	scale_offset = yes
	place_entity_on_planet_plane = yes
	#show_in_outliner = no
	use_planet_resource = yes
	build_time = 1080 # 3 years
	resources = {
		category = megastructures
		cost = {
			alloys = 500
			unity = 1000
		}

		upkeep = {
			alloys = 5
		}
	}

	construction_blocks_and_blocked_by = none
	custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_DYSON_SWARM"

	dismantle_cost = {
		category = megastructures
		cost = {
			energy = 500
		}
	}

	dismantle_time = 360


	dismantle_potential = {
		always = yes
	}

	dismantle_possible = {
		can_dismantle_megastructure = {
			TECH = tech_dyson_swarm
		}
	}

	on_dismantle_complete = {
		random_system_planet = {
			limit = {
				has_modifier = dyson_swarm_1_mod
			}
			remove_planet_flag = has_megastructure
			remove_modifier = dyson_swarm_1_mod
		}
		from = {
			add_resource = {
				alloys = 500
				mult = modifier:megastructure_dismantle_refund_mult
			}
			if = {
				limit = {
					check_variable = {
						which = dyson_swarm_counter
						value >= 1
					}
				}
				change_variable = {
					which = dyson_swarm_counter
					value = -1
				}
			}
		}
	}

	prerequisites = { "tech_dyson_swarm" }

	potential = {
		has_machine_age_dlc = yes
	}

	possible = {
		hidden_trigger = {
			exists = starbase
		}
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_binary_trinary"
			NOR = {
				is_binary_star = yes
				is_trinary_star = yes
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_black_hole_neutron_star_pulsar"
			NOT = {
				is_star_class = sc_black_hole
				is_star_class = sc_neutron_star
				is_star_class = sc_pulsar
			}
		}
		custom_tooltip = {
			fail_text = "requires_less_than_x_dyson_swarms"
			from = {
				check_variable = {
					which = dyson_swarm_counter
					value <= value:dyson_swarm_limit
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "must_build_around_star"
				is_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				NOR = {
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
				}
			}
			if = {
				limit = {
					from = { is_ai = yes }
				}
				NOR = {
					has_deposit = d_energy_1
					has_deposit = d_energy_2
				}
			}
		}
	}

	country_modifier = {
		custom_tooltip = dyson_swarm_1_mod_tooltip
	}

	# root = system
	# from = country
	ai_weight = {
		factor = 5

		modifier = {
			factor = 0.1
			starbase = { NOT = { has_starbase_size >= starbase_starfortress } }
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				NOT = {
					owner = { is_same_value = from }
				}
			}
		}
	}

	on_build_start = {
		from = {
			change_variable = {
				which = dyson_swarm_counter
				value = 1
			}
		}
	}
	on_build_cancel = {
		from = {
			if = {
				limit = {
					check_variable = {
						which = dyson_swarm_counter
						value >= 1
					}
				}
				change_variable = {
					which = dyson_swarm_counter
					value = -1
				}
			}
		}
	}
	on_build_complete = {
		from = { country_event = { id = cybernetics.1020 } }
		fromfrom.planet = {
			set_planet_flag = has_megastructure
			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
		}
	}
}